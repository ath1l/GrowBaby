<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>GrowBaby ChatBot</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');

        :root {
            --hex-current-1: #7360DF; /* Dark Purple */
            --hex-current-2: #C499F3; /* Light Purple */
            --hex-current-3: #F2AFEF; /* Pink */
            --main-text-color: #33186B; /* Dark Text */
            --chat-user-bg: #EAE6FF;
            --chat-bot-bg: rgba(255, 255, 255, 0.8);
            --form-bg: rgba(255, 255, 255, 0.5);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #F2AFEF 0%, #C499F3 25%, #7360DF 50%, #33186B 75%, #F2AFEF 100%);
            min-height: 100vh;
            color: var(--main-text-color);
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            overflow-x: hidden;
            flex-direction: column;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: -10%;
            left: -10%;
            width: 120%;
            height: 120%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(242, 175, 239, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(196, 153, 243, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 40% 40%, rgba(115, 96, 223, 0.3) 0%, transparent 50%);
            animation: float 25s ease-in-out infinite;
            z-index: -1;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0) rotate(0deg) scale(1); }
            33% { transform: translateY(-20px) rotate(120deg) scale(1.05); }
            66% { transform: translateY(-10px) rotate(240deg) scale(0.95); }
        }

        .container {
            width: 100%;
            max-width: 600px;
            height: 80vh;
            display: flex;
            flex-direction: column;
            background: linear-gradient(145deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.6) 100%);
            backdrop-filter: blur(20px);
            border-radius: 28px;
            box-shadow: 
                0 25px 50px rgba(242, 175, 239, 0.15),
                0 15px 35px rgba(196, 153, 243, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            border: 2px solid rgba(242, 175, 239, 0.3);
            overflow: hidden;
            position: relative;
            z-index: 1;
            animation: fadeIn 1s ease-in-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        header {
            padding: 20px;
            text-align: center;
            font-size: 28px;
            font-weight: 800;
            color: var(--hex-current-1);
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        header::before {
            content: 'ðŸ’¬';
            font-size: 1.5em;
            margin-right: 10px;
            animation: pulse 2s infinite ease-in-out;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        .top-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.6);
            background: rgba(255, 255, 255, 0.3);
        }

        .tagline {
            font-size: 14px;
            font-weight: 500;
            color: var(--main-text-color);
            position: relative;
            padding-left: 25px;
        }

        .tagline::before {
            content: 'ðŸ‘¶';
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            animation: wiggle 1s infinite;
        }
        
        @keyframes wiggle {
            0%, 100% { transform: translateY(-50%) rotate(-5deg); }
            50% { transform: translateY(-50%) rotate(5deg); }
        }

        .clear-btn {
            background: none;
            border: none;
            color: var(--main-text-color);
            font-size: 16px;
            cursor: pointer;
            padding: 5px 10px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .clear-btn:hover {
            background: var(--hex-current-3);
            color: white;
            transform: rotate(90deg);
        }

        .chat-box {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 10px;
            -ms-overflow-style: none; /* IE and Edge */
            scrollbar-width: none; /* Firefox */
        }

        .chat-box::-webkit-scrollbar {
            display: none;
        }

        .message {
            max-width: 80%;
            padding: 12px 18px;
            border-radius: 20px;
            line-height: 1.5;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            animation: messageSlideIn 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
        }
        
        @keyframes messageSlideIn {
            from { transform: translateY(20px) scale(0.9); opacity: 0; }
            to { transform: translateY(0) scale(1); opacity: 1; }
        }

        .user-msg {
            align-self: flex-end;
            background: var(--hex-current-2);
            color: white;
            border-bottom-right-radius: 5px;
        }

        .bot-msg {
            align-self: flex-start;
            background: var(--chat-bot-bg);
            color: var(--main-text-color);
            border-bottom-left-radius: 5px;
        }
        
        .typing-indicator {
            align-self: flex-start;
            background: rgba(255, 255, 255, 0.8);
            color: var(--main-text-color);
            padding: 12px 18px;
            border-radius: 20px;
            border-bottom-left-radius: 5px;
        }
        .typing-indicator span {
            display: inline-block;
            width: 8px;
            height: 8px;
            background: var(--main-text-color);
            border-radius: 50%;
            margin: 0 2px;
            animation: typing-bounce 1.5s infinite;
        }
        .typing-indicator span:nth-child(2) { animation-delay: 0.2s; }
        .typing-indicator span:nth-child(3) { animation-delay: 0.4s; }

        @keyframes typing-bounce {
            0%, 60%, 100% { transform: translateY(0); }
            30% { transform: translateY(-5px); }
        }

        .empty-text {
            text-align: center;
            color: rgba(51, 24, 107, 0.6);
            padding: 20px;
        }

        .chat-form {
            display: flex;
            padding: 20px;
            border-top: 1px solid rgba(255, 255, 255, 0.6);
            background: var(--form-bg);
            border-bottom-left-radius: 28px;
            border-bottom-right-radius: 28px;
        }

        .chat-form input[type="text"] {
            flex-grow: 1;
            padding: 15px;
            border: 2px solid var(--hex-current-3);
            border-radius: 20px;
            background: rgba(255, 255, 255, 0.7);
            font-size: 16px;
            color: var(--main-text-color);
            transition: all 0.3s ease;
        }

        .chat-form input[type="text"]:focus {
            border-color: var(--hex-current-1);
            background: #fff;
            box-shadow: 0 0 10px rgba(115, 96, 223, 0.3);
            outline: none;
        }

        .chat-form button {
            padding: 15px 25px;
            border: none;
            background: var(--hex-current-1);
            color: white;
            font-weight: 600;
            font-size: 16px;
            border-radius: 20px;
            margin-left: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(115, 96, 223, 0.4);
        }

        .chat-form button:hover {
            background: var(--hex-current-2);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(115, 96, 223, 0.6);
        }
    </style>
</head>

<body>
    <header>GrowBaby ChatBot</header>

    <div class="container">
        <div class="top-bar">
            <div class="tagline">Ask anything about baby tracking</div>
            <form action="/chatbot/clear" method="POST">
                <button type="submit" class="clear-btn">âœ–</button>
            </form>
        </div>

        <div class="chat-box" id="chat-box">
            <% if (messages.length > 0) { %>
                <% messages.slice().reverse().forEach(msg => { %>
                    <div class="message user-msg"><%= msg.user %></div>
                    <div class="message bot-msg"><%= msg.bot %></div>
                <% }) %>
            <% } else { %>
                <p class="empty-text">No messages yet. Say hi! ðŸ‘‹</p>
            <% } %>
            <div class="typing-indicator" style="display: none;">
                <span></span><span></span><span></span>
            </div>
        </div>

        <form method="POST" class="chat-form">
            <input type="text" name="message" placeholder="Type your message..." required autocomplete="off">
            <button type="submit">Send</button>
        </form>
    </div>

    <script>
        const chatBox = document.getElementById('chat-box');
        const chatForm = document.querySelector('.chat-form');
        const typingIndicator = document.querySelector('.typing-indicator');

        // Scroll to the bottom of the chat on page load
        chatBox.scrollTop = chatBox.scrollHeight;

        chatForm.addEventListener('submit', function() {
            // Show typing indicator on form submit
            typingIndicator.style.display = 'block';
            chatBox.scrollTop = chatBox.scrollHeight;

            // Optional: Hide indicator after a few seconds (e.g., simulating a response)
            setTimeout(() => {
                typingIndicator.style.display = 'none';
                // In a real application, the response would be rendered here
            }, 3000);
        });
    </script>
</body>

</html>
